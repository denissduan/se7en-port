package com.se7en.control.${domainName};
import java.util.HashMap;
import java.util.Map;
import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import net.sf.json.JSONObject;
import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import com.se7en.control.AbstractControl;
import com.se7en.web.vo.PageView;
import com.se7en.model.AjaxResult;
import com.se7en.service.${domainName}.${className}Service;
import com.se7en.model.${domainName}.${className};

/**
 * #if($prop.OwnedComments.size() == 1)$prop.OwnedComments.get(0).Body#end
 * ${className} control
 */
@Controller
@RequestMapping("/$StringUtil.firstLower($className)")
public class ${className}Controller extends AbstractControl {
	
	@Resource
	private ${className}Service srv;
	
	/**
	 * init page
	 * @param req
	 * @param res
	 * @return
	 */
	@RequestMapping("/init.do")
	public ModelAndView init(final HttpServletRequest req,
			final HttpServletResponse res) {
		
		return new ModelAndView(MANAGE_ENGINE,CLASS_NAME,"${className}");
	}
	
	/**
	 * page query
	 * @param req
	 * @param res
	 * @return
	 */
	@RequestMapping("/query.do")
	public @ResponseBody PageView query(final HttpServletRequest req,
			final HttpServletResponse res,final ${className} $StringUtil.firstLower(${className})) {
		
		return srv.modelQuery(req, wrapModelQueryView(req,${className}.class));
		/*return srv.pageViewQueryS($StringUtil.firstLower(${className}),
				wrapQueryView(req,${className}.class
					,"id"
#foreach( $opt in $class.getOwnedOperations() )
#if(${opt.Name.contains("list")})
#foreach ($optParam in $opt.OwnedParameters)
#set($fldName = ${optParam.Name})
#set($fldClassName = ${fldClassName})
#set($prop = $modelEngine.getProperty($className,${fldName}))
#set( $type = $prop.getType() )
					,"$fldName"
#end
#end
#end
					));*/
	}
	
	/**
	 * detail dialog
	 * @param req
	 * @param res
	 * @param id
	 * @return
	 */
	@RequestMapping("/detail.do")
	public ModelAndView detail(final HttpServletRequest req,
			final HttpServletResponse res,final Integer id) {
		Map<String,Object> model = new HashMap<String,Object>();
		model.put(CLASS_NAME, "${className}");
		if(id != null){
			${className} $StringUtil.firstLower($className) = srv.get(id);
			model.put(VIEW_OBJECT, $StringUtil.firstLower($className));
		}
		
		//return new ModelAndView("${domainName}/${className.toLowerCase()}/detail",model);
		return new ModelAndView(DETAIL_ENGINE,model);
	}
	
	/**
	 * save
	 * @param req
	 * @param res
	 * @return
	 */
	@RequestMapping("/save.do")
	public @ResponseBody AjaxResult save(final HttpServletRequest req,
			final HttpServletResponse res,final ${className} $StringUtil.firstLower($className)) {
		final boolean sign = srv.saveOrUpdate($StringUtil.firstLower($className));
		
		return ajaxCallback(sign);
	}
	
	/**
	 * delete
	 * @param req
	 * @param res
	 * @param $StringUtil.firstLower($className)
	 * @return
	 */
	@RequestMapping("/delete.do")
	public @ResponseBody AjaxResult delete(final HttpServletRequest req,
			final HttpServletResponse res,final ${className} $StringUtil.firstLower($className)) {
		final boolean sign = srv.delete($StringUtil.firstLower($className));
		
		return ajaxCallback(sign);
	}
}